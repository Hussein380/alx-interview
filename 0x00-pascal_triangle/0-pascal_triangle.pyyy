#!/usr/bin/python3
"""
Module for generating Pascal's Triangle.
"""

def pascal_triangle(n):
    """
    Generates Pascal's Triangle up to the nth row.

    Args:
    n (int): The number of rows of Pascal's Triangle to generate.

    Returns:
    list: A list of lists of integers representing Pascal's Triangle.
    """
    
    # Initialize the list to hold the rows of Pascal's Triangle
    triangle = []

    # Only proceed if n is greater than 0
    if n > 0:
        # Loop through each row
        for row in range(1, n + 1):
            # Initialize the list to hold the current row's values
            current_row = []
            # Start with the first coefficient, which is always 1
            coefficient = 1

            # Loop through each element in the current row
            for element in range(1, row + 1):
                # Append the current coefficient to the row
                current_row.append(coefficient)
                # Calculate the next coefficient
                coefficient = coefficient * (row - element) // element

            # Add the current row to the triangle
            triangle.append(current_row)

    # Return the completed Pascal's Triangle
    return triangle
